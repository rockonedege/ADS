#pragma once

#if !defined(__ADSDEF_H__)
#pragma message("must #include <AdsLib.h> before this file if using AdsLib or TcAdsDef.h if TWinCAT ADS-DLL")
#endif

namespace appinfo
{
    struct {
        const int major = @PROJECT_VERSION_MAJOR@;
        const int minor = @PROJECT_VERSION_MINOR@;
        const int patch = @PROJECT_VERSION_PATCH@;
        const int build = @PROJECT_VERSION_TWEAK@;
        const char* to_string = "@PROJECT_VERSION@";
        const wchar_t* to_wstring = L"@PROJECT_VERSION@";
    } const version;

    const char* name = "@PROJECT_NAME@";

    const char* meta_text =
        "==============================================================================\n"
        "\t@PROJECT_NAME@ version @PROJECT_VERSION@ for @CMAKE_SYSTEM_NAME@ @TARGET_PLATFORM_NAME@, " __DATE__ ".\n"
#if defined(_DEBUG)
        "\n\t!!THIS IS A DEBUG BUILD, NOT FOR PRODUCTION USAGES. !!\n"
#endif
        "==============================================================================\n";
}

namespace test_twincat_server
{
    struct remote_target {
        const char* ip_v4;
        AmsAddr server;
    };

    // example for TWinCAT2
    remote_target tc2 = {
        "10.8.9.36",                    // ip v4
        {
            { 10, 0, 96, 139, 1, 1 },   // AMS Net Id
            AMSPORT_R0_PLC              // AMS Port number
        }
    };

    // example for TWinCAT3
    const remote_target tc3 = {
        "192.168.0.232",                 // ip v4
        {
            { 192, 168, 0, 231, 1, 1 },  // AMS Net Id
            AMSPORT_R0_PLC_TC3           // AMS Port number
        }
    };

    const remote_target& tc = tc2;
}
